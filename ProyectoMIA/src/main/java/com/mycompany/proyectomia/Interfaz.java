/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.proyectomia;

import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class Interfaz extends javax.swing.JFrame {

    Reproductor Reproducir = new Reproductor();
    boolean Verificar = false, Verificar2 = false;
    private ImageIcon IconoAnterior = new ImageIcon("Anterior.png");
    private ImageIcon IconoSiguiente = new ImageIcon("Siguiente.png");
    private ImageIcon IconoAgregar = new ImageIcon("Canciones.png");
    private ImageIcon IconoAgregarD = new ImageIcon("Musica.png");
    private ImageIcon IconoVentana = new ImageIcon("Canciones.png");
    private ImageIcon IconoLimpiar = new ImageIcon("Eliminar.png");
    private ImageIcon IconoCarpeta = new ImageIcon("Carpeta.jpg");
    private ImageIcon IconoRegresar = new ImageIcon("volver.png");
    private ImageIcon IconoBuscar = new ImageIcon("Buscar.jpg");
    private ImageIcon IconoEditar = new ImageIcon("Editar.jpg");
    private ImageIcon IconoRecargar = new ImageIcon("Recargar.jpg");
    Lista listaActual = new Lista();
    Lista listaArtistas = new Lista();
    Lista listaAlbum = new Lista();

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        setLocationRelativeTo(null);
        File directorio = new File("Lista");
        File f = new File(directorio.getName());
        AnteriorButton.setIcon(new ImageIcon(IconoAnterior.getImage()));
        SiguienteButton.setIcon(new ImageIcon(IconoSiguiente.getImage()));
        AgregarButton.setIcon(new ImageIcon(IconoAgregarD.getImage()));
        VaciarButton.setIcon(new ImageIcon(IconoLimpiar.getImage()));
        Agregar_Button.setIcon(new ImageIcon(IconoAgregar.getImage()));
        generarArchivos.setIcon(new ImageIcon(IconoCarpeta.getImage()));
        regresar.setIcon(new ImageIcon(IconoRegresar.getImage()));
        Buscar.setIcon(new ImageIcon(IconoBuscar.getImage()));
        Edicion.setIcon(new ImageIcon(IconoEditar.getImage()));
        ListaGuardada.setIcon(new ImageIcon(IconoRecargar.getImage()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        AgregarButton = new javax.swing.JButton();
        SiguienteButton = new javax.swing.JButton();
        AnteriorButton = new javax.swing.JButton();
        cancionActual = new javax.swing.JLabel();
        MostrarLista = new java.awt.List();
        VaciarButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        MostrarContenido = new java.awt.List();
        Agregar_Button = new javax.swing.JButton();
        generarArchivos = new javax.swing.JButton();
        comboArt = new javax.swing.JComboBox<>();
        comboAlb = new javax.swing.JComboBox<>();
        regresar = new javax.swing.JButton();
        Buscar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        Edicion = new javax.swing.JButton();
        ListaGuardada = new javax.swing.JButton();
        Soy = new javax.swing.JComboBox<>();
        eliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lector de Datos");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 255, 204), 10));
        jPanel1.setPreferredSize(new java.awt.Dimension(989, 300));

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        jLabel1.setText("Canción Actual:");

        AgregarButton.setBackground(new java.awt.Color(204, 204, 204));
        AgregarButton.setText("Agregar Directorio");
        AgregarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarButtonActionPerformed(evt);
            }
        });

        SiguienteButton.setBackground(new java.awt.Color(204, 204, 204));
        SiguienteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SiguienteButtonActionPerformed(evt);
            }
        });

        AnteriorButton.setBackground(new java.awt.Color(204, 204, 204));
        AnteriorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnteriorButtonActionPerformed(evt);
            }
        });

        MostrarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarListaActionPerformed(evt);
            }
        });

        VaciarButton.setText("Vaciar Lista");
        VaciarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VaciarButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 24)); // NOI18N
        jLabel2.setText("Descripción:");

        MostrarContenido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarContenidoActionPerformed(evt);
            }
        });

        Agregar_Button.setBackground(new java.awt.Color(204, 204, 204));
        Agregar_Button.setText("Agregar Cancion");
        Agregar_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Agregar_ButtonActionPerformed(evt);
            }
        });

        generarArchivos.setText("Generar Archivo");
        generarArchivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarArchivosActionPerformed(evt);
            }
        });

        comboArt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar artista"}));
        comboArt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboArtActionPerformed(evt);
            }
        });

        comboAlb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar album" }));
        comboAlb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAlbActionPerformed(evt);
            }
        });

        regresar.setText("Regresar");
        regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarActionPerformed(evt);
            }
        });

        Buscar.setText("Buscar Por");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        jButton4.setText("Información acerca de las busquedas");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        Edicion.setText("Opciones de edición");
        Edicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EdicionActionPerformed(evt);
            }
        });

        ListaGuardada.setText("Lista Guardada");
        ListaGuardada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListaGuardadaActionPerformed(evt);
            }
        });

        Soy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Album", "Artista", "Pista", "Año" }));
        Soy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SoyActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar actual");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(cancionActual, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(AnteriorButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MostrarLista, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AgregarButton)
                                    .addComponent(generarArchivos))
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(Agregar_Button)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(VaciarButton))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(comboArt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboAlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(regresar)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SiguienteButton))
                            .addComponent(Edicion)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ListaGuardada)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(eliminar)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 53, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MostrarContenido, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Soy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(200, 200, 200))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cancionActual, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(MostrarLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AnteriorButton)
                            .addComponent(SiguienteButton)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(AgregarButton)
                                .addComponent(VaciarButton)
                                .addComponent(Agregar_Button)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(generarArchivos)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(comboArt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboAlb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(regresar))))
                    .addComponent(MostrarContenido, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Buscar)
                            .addComponent(Soy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(113, 113, 113))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(Edicion)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ListaGuardada)
                            .addComponent(eliminar))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1063, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Agregar_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Agregar_ButtonActionPerformed
        // TODO add your handling code here:
        MostrarLista.clear();
        try {
            Reproducir.Agregar();
        } catch (Exception ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        int num = 0;
        Nodo Obtener = Reproducir.Frente();
        cancionActual.setText(Reproducir.Actual().getCancion().getPista());
        try {
            ListadeDatos();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < (Reproducir.NumLista() + num); i++) {
            MostrarLista.add(Obtener.getCancion().getPista());
            if (Obtener.getSiguiente() != null) {
                Obtener = Obtener.getSiguiente();
            }
        }


    }//GEN-LAST:event_Agregar_ButtonActionPerformed

    private void MostrarContenidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarContenidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MostrarContenidoActionPerformed

    private void VaciarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VaciarButtonActionPerformed
        Verificar = false;
        try {
        } catch (Exception ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        Reproducir = new Reproductor();
        MostrarLista.clear();
        cancionActual.setText("");
        MostrarContenido.clear();
    }//GEN-LAST:event_VaciarButtonActionPerformed

    private void MostrarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarListaActionPerformed

    }//GEN-LAST:event_MostrarListaActionPerformed

    private void AnteriorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnteriorButtonActionPerformed
        MostrarContenido.clear();
        try {
            Reproducir.Anterior();
            cancionActual.setText(Reproducir.Actual().getCancion().getPista());
            ListadeDatos();
        } catch (Exception ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_AnteriorButtonActionPerformed

    private void SiguienteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SiguienteButtonActionPerformed
        MostrarContenido.clear();
        try {
            Reproducir.Siguiente();
            cancionActual.setText(Reproducir.Actual().getCancion().getPista());
            ListadeDatos();
        } catch (Exception ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SiguienteButtonActionPerformed

    private void AgregarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarButtonActionPerformed
        MostrarLista.clear();
        try {
            Reproducir.AgregarDirectorio();
        } catch (Exception ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        int num = 0;
        Nodo Obtener = Reproducir.Frente();
        cancionActual.setText(Reproducir.Actual().getCancion().getPista());
        try {
            ListadeDatos();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < (Reproducir.NumLista() + num); i++) {
            MostrarLista.add(Obtener.getCancion().getPista());
            if (Obtener.getSiguiente() != null) {
                Obtener = Obtener.getSiguiente();
            }
        }

        listaActual = Reproducir.getLista();
        listaActual.setRecorredor();
        String artista = "";
        while (listaActual.actual().getSiguiente() != null) {
            if (artista == null ? listaActual.actual().getCancion().getArtista() != null : !artista.equals(listaActual.actual().getCancion().getArtista())) {
                if (listaActual.actual().getCancion().getArtista() != null) {
                    artista = listaActual.actual().getCancion().getArtista();
                    comboArt.addItem(listaActual.actual().getCancion().getArtista());
                }
            }
            listaActual.Siguiente();
        }
    }//GEN-LAST:event_AgregarButtonActionPerformed

    private void generarArchivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarArchivosActionPerformed
        try {
            Reproducir.generarArchivos();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_generarArchivosActionPerformed

    private void comboArtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboArtActionPerformed

        listaArtistas = new Lista();
        String itemSeleecionado = (String) comboArt.getSelectedItem();
        listaActual.setRecorredor();
        String album = "";
        while (listaActual.actual().getSiguiente() != null) {
            if (itemSeleecionado == null ? listaActual.actual().getCancion().getArtista() == null : itemSeleecionado.equals(listaActual.actual().getCancion().getArtista())) {
                listaArtistas.Insertar(listaActual.actual().getCancion());
                if (album == null ? listaActual.actual().getCancion().getAlbum() != null : !album.equals(listaActual.actual().getCancion().getAlbum())) {
                    System.out.println(album + " xxx  " + listaActual.actual().getCancion().getAlbum());
                    if (listaActual.actual().getCancion().getAlbum() != null) {
                        album = listaActual.actual().getCancion().getAlbum();
                        comboAlb.addItem(listaActual.actual().getCancion().getAlbum());
                    }
                }
            }
            listaActual.Siguiente();
        }
        listaArtistas.Mostrar(listaArtistas.frente());
        try {
            mostarListaArtista();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboArtActionPerformed

    private void comboAlbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAlbActionPerformed
        listaAlbum = new Lista();
        String itemSeleecionado = (String) comboAlb.getSelectedItem();
        listaActual.setRecorredor();
        String album = "";
        while (listaActual.actual().getSiguiente() != null) {
            if (itemSeleecionado == null ? listaActual.actual().getCancion().getAlbum() == null : itemSeleecionado.equals(listaActual.actual().getCancion().getAlbum())) {

                listaAlbum.Insertar(listaActual.actual().getCancion());
            }
            listaActual.Siguiente();
        }
        try {
            mostrarListaAlbum();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_comboAlbActionPerformed

    private void regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarActionPerformed
        Reproducir = new Reproductor();
        MostrarLista.clear();
        cancionActual.setText("");
        MostrarContenido.clear();
        int num = 0;
        try {
            Reproducir.setLista(listaActual);
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        Nodo Obtener = Reproducir.Frente();
        cancionActual.setText(Reproducir.Actual().getCancion().getPista());
        try {
            ListadeDatos();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < (Reproducir.NumLista() + num); i++) {
            MostrarLista.add(Obtener.getCancion().getPista());
            if (Obtener.getSiguiente() != null) {
                Obtener = Obtener.getSiguiente();
            }
        }
    }//GEN-LAST:event_regresarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        JOptionPane.showMessageDialog(null, "Las busquedas se realizan a través del archivo guardado en la computadora");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void EdicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EdicionActionPerformed

        Object[] options = {"Disquera", "Artista", "Album", "Año", "Genero", "Pista", "Direccion", "Duracion (segundos)", "Letra", "Pagina del Artista", "Pagina de la disquera", "Otras paginas"};
        int n = JOptionPane.showOptionDialog(null,
                "¿Que desea editar de la cancion actual?",
                "Opciones de edición",
                JOptionPane.YES_NO_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[2]);
        String nuevoDato = JOptionPane.showInputDialog("Escriba el nuevo valor del dato que desee cambiar");
        JOptionPane.showMessageDialog(null, "Dato correctamente editado");
        switch (n) {
            case 0:
                Reproducir.Actual().getCancion().setDisquera(nuevoDato);
                break;
            case 1:
                Reproducir.Actual().getCancion().setArtista(nuevoDato);
                break;
            case 2:
                Reproducir.Actual().getCancion().setAlbum(nuevoDato);
                break;
            case 3:
                Reproducir.Actual().getCancion().setAño(nuevoDato);
                break;
            case 4:
                Reproducir.Actual().getCancion().setGenero(nuevoDato);
                break;
            case 5:
                Reproducir.Actual().getCancion().setPista(nuevoDato);
                break;
            case 6:
                Reproducir.Actual().getCancion().setUrl(nuevoDato);
                break;
            case 7:
                Reproducir.Actual().getCancion().setDuracion(nuevoDato);
                break;
            case 8:
                Reproducir.Actual().getCancion().setLetra(nuevoDato);
                break;
            case 9:
                Reproducir.Actual().getCancion().setPagArtista(nuevoDato);
                break;
            case 10:
                Reproducir.Actual().getCancion().setPagDisquera(nuevoDato);
                break;
            case 11:
                Reproducir.Actual().getCancion().setPagOtras(nuevoDato);
                break;
        }
        try {
            ListadeDatos();
            Reproducir.generarArchivos();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_EdicionActionPerformed

    private void ListaGuardadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListaGuardadaActionPerformed
        Reproducir.leerArchivo();
        int num = 0;
        Nodo Obtener = Reproducir.Frente();
        cancionActual.setText(Reproducir.Actual().getCancion().getPista());
        try {
            ListadeDatos();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < (Reproducir.NumLista() + num); i++) {
            MostrarLista.add(Obtener.getCancion().getPista());
            if (Obtener.getSiguiente() != null) {
                Obtener = Obtener.getSiguiente();
            }
        }
    }//GEN-LAST:event_ListaGuardadaActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        Reproducir.leerArchivoAlbum((String)Soy.getSelectedItem());
        int num = 0;
        Nodo Obtener = Reproducir.Frente();
        cancionActual.setText(Reproducir.Actual().getCancion().getPista());
        try {
            ListadeDatos();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < (Reproducir.NumLista() + num); i++) {
            MostrarLista.add(Obtener.getCancion().getPista());
            if (Obtener.getSiguiente() != null) {
                Obtener = Obtener.getSiguiente();
            }
        }
    }//GEN-LAST:event_BuscarActionPerformed

    private void SoyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SoyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SoyActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        MostrarLista.clear();
        Reproducir.MeVoy();
        int num = 0;
        Nodo Obtener = Reproducir.Frente();
        cancionActual.setText(Reproducir.Actual().getCancion().getPista());
        try {
            ListadeDatos();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < (Reproducir.NumLista() + num); i++) {
            MostrarLista.add(Obtener.getCancion().getPista());
            if (Obtener.getSiguiente() != null) {
                Obtener = Obtener.getSiguiente();
            }
        }
    }//GEN-LAST:event_eliminarActionPerformed
    public void mostarListaArtista() throws IOException {

        Reproducir = new Reproductor();
        MostrarLista.clear();
        cancionActual.setText("");
        MostrarContenido.clear();
        int num = 0;
        Reproducir.setLista(listaArtistas);
        Nodo Obtener = Reproducir.Frente();
        cancionActual.setText(Reproducir.Actual().getCancion().getPista());
        try {
            ListadeDatos();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < (Reproducir.NumLista() + num); i++) {
            MostrarLista.add(Obtener.getCancion().getPista());
            if (Obtener.getSiguiente() != null) {
                Obtener = Obtener.getSiguiente();
            }
        }
    }

    public void mostrarListaAlbum() throws IOException {
        Reproducir = new Reproductor();
        MostrarLista.clear();
        cancionActual.setText("");
        MostrarContenido.clear();
        int num = 0;
        Reproducir.setLista(listaAlbum);
        Nodo Obtener = Reproducir.Frente();
        cancionActual.setText(Reproducir.Actual().getCancion().getPista());
        try {
            ListadeDatos();
        } catch (IOException ex) {
            Logger.getLogger(Interfaz.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (int i = 0; i < (Reproducir.NumLista() + num); i++) {
            MostrarLista.add(Obtener.getCancion().getPista());
            if (Obtener.getSiguiente() != null) {
                Obtener = Obtener.getSiguiente();
            }
        }
    }

    private void ListadeDatos() throws FileNotFoundException, IOException {
        MostrarContenido.clear();
        int contadorBytes = 0;
        MostrarContenido.add("Disquera: " + Reproducir.Actual().getCancion().getDisquera());
        MostrarContenido.add("Artista: " + Reproducir.Actual().getCancion().getArtista());
        MostrarContenido.add("Album: " + Reproducir.Actual().getCancion().getAlbum());
        MostrarContenido.add("Año: " + Reproducir.Actual().getCancion().getAño());
        MostrarContenido.add("Genero: " + Reproducir.Actual().getCancion().getGenero());
        MostrarContenido.add("Pista: " + Reproducir.Actual().getCancion().getPista());
        MostrarContenido.add("Direccion: " + Reproducir.Actual().getCancion().getUrl());
        MostrarContenido.add("Duracion: " + Reproducir.Actual().getCancion().getDuracion());
        MostrarContenido.add("Letra: " + Reproducir.Actual().getCancion().getLetra());
        MostrarContenido.add("Pagina del Artista: " + Reproducir.Actual().getCancion().getPagArtista());
        MostrarContenido.add("Pagina de la disquera: " + Reproducir.Actual().getCancion().getPagDisquera());
        MostrarContenido.add("Otras páginas: " + Reproducir.Actual().getCancion().getPagOtras());
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AgregarButton;
    private javax.swing.JButton Agregar_Button;
    private javax.swing.JButton AnteriorButton;
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Edicion;
    private javax.swing.JButton ListaGuardada;
    private java.awt.List MostrarContenido;
    private java.awt.List MostrarLista;
    private javax.swing.JButton SiguienteButton;
    private javax.swing.JComboBox<String> Soy;
    private javax.swing.JButton VaciarButton;
    private javax.swing.JLabel cancionActual;
    private javax.swing.JComboBox<String> comboAlb;
    private javax.swing.JComboBox<String> comboArt;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton generarArchivos;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton regresar;
    // End of variables declaration//GEN-END:variables
}
